default_platform(:ios)

platform :ios do
  desc "버전과 빌드 번호 증가 (TestFlight 배포용)"
  lane :bump_version do
    increment_build_number(
      build_number: latest_testflight_build_number + 1,
      workspace: "ToMyongJi.xcworkspace",
      scheme: "ToMyongJi-iOS"
    )
  end

  lane :bump_version_auto do
    current_version = get_version_number(
      xcodeproj: "ToMyongJi.xcodeproj",
      target: "ToMyongJi-iOS"
    )
    version_components = current_version.split(".").map(&:to_i)
    version_components[-1] += 1
    new_version = version_components.join(".")
    increment_version_number(
      version_number: new_version,
      xcodeproj: "ToMyongJi.xcodeproj"
    )
  end

  desc "인증서와 프로비저닝 프로파일 동기화"
  lane :sync_certificates do
    keychain_name = "build.keychain"
    keychain_password = ENV["KEYCHAIN_PASSWORD"]

    # 기존 키체인 삭제 (존재하지 않아도 무시)
    sh("security delete-keychain #{keychain_name}") rescue nil

    # 새 키체인 생성 및 설정
    create_keychain(
      name: keychain_name,
      password: keychain_password,
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false,
      add_to_search_list: true
    )

    # 키체인 잠금 해제
    sh("security unlock-keychain -p #{keychain_password} #{keychain_name}")

    # 키체인 설정
    sh("security set-keychain-settings -t 3600 -u #{keychain_name}")

    # 인증 로그 (디버깅용)
    sh("security list-keychains")
    sh("security find-identity -v -p codesigning")

    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"],
      duration: 1200,
      in_house: false
    )

    match(
      type: "appstore",
      app_identifier: "com.tomyongji.ios",
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      readonly: true,
      force: true
    )
  end

  desc "TestFlight에 새 버전 배포"
  lane :beta do
    current_version = get_version_number(
      xcodeproj: "ToMyongJi.xcodeproj",
      target: "ToMyongJi-iOS"
    )
    version_components = current_version.split(".").map(&:to_i)
    version_components[-1] += 1
    new_version = version_components.join(".")
    increment_version_number(
      version_number: new_version,
      xcodeproj: "ToMyongJi.xcodeproj"
    )

    sync_certificates
    increment_build_number
    build_ios_app(
      scheme: "ToMyongJi-iOS",
      export_method: "app-store",
      export_team_id: "FN67GXC5GH",
      export_options: {
        provisioningProfiles: {
          "com.tomyongji.ios" => "match AppStore com.tomyongji.ios"
        },
        signingStyle: "manual",
        signingCertificate: "Apple Distribution"
      },
      xcargs: "-skipPackageUpdates -skipPackagePluginValidation -skipMacroValidation -skip-testing EXCLUDED_SOURCE_FILE_NAMES='*Tests.*' CODE_SIGN_IDENTITY='Apple Distribution' DEVELOPMENT_TEAM='FN67GXC5GH' CODE_SIGN_STYLE='Manual'"
    )
    upload_to_testflight(
      skip_waiting_for_build_processing: true
    )
  end

  desc "App Store에 새 버전 배포"
  lane :release do
    sync_certificates
    increment_build_number
    build_ios_app(
      scheme: "ToMyongJi-iOS",
      export_method: "app-store",
      export_team_id: "FN67GXC5GH",
      export_options: {
        provisioningProfiles: {
          "com.tomyongji.ios" => "match AppStore com.tomyongji.ios"
        },
        signingStyle: "manual",
        signingCertificate: "Apple Distribution"
      },
      xcargs: "-skipPackageUpdates -skipPackagePluginValidation -skipMacroValidation -skip-testing EXCLUDED_SOURCE_FILE_NAMES='*Tests.*' CODE_SIGN_IDENTITY='Apple Distribution' DEVELOPMENT_TEAM='FN67GXC5GH' CODE_SIGN_STYLE='Manual'"
    )
    upload_to_app_store(
      skip_screenshots: true,
      skip_metadata: true
    )
  end
end
