# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "버전과 빌드 번호 증가 (TestFlight 배포용)"
  lane :bump_version do
    increment_build_number(
      build_number: latest_testflight_build_number + 1,
      workspace: "ToMyongJi.xcworkspace",
      scheme: "ToMyongJi-iOS"
    )
  end

  lane :bump_version_auto do
    current_version = get_version_number(
      xcodeproj: "ToMyongJi.xcodeproj",
      target: "ToMyongJi-iOS"
    )
    version_components = current_version.split(".").map(&:to_i)
    version_components[-1] += 1
    new_version = version_components.join(".")
    increment_version_number(
      version_number: new_version,
      xcodeproj: "ToMyongJi.xcodeproj"
    )
  end

  # desc "테스트 실행 (모듈별로 추가 가능)"
  # lane :test do
  #   run_tests(
  #     workspace: "ToMyongJi.xcworkspace",
  #     scheme: "ToMyongJi-iOS",
  #     device: "iPhone 15 Pro"
  #   )
  # end

  desc "인증서와 프로비저닝 프로파일 동기화"
  lane :sync_certificates do
    # 키체인 설정 추가
    begin
      create_keychain(
        name: "login.keychain",
        password: ENV["KEYCHAIN_PASSWORD"],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        lock_when_sleeps: false
      )
    rescue => ex
      UI.message("키체인이 이미 존재합니다: #{ex.message}")
    end

    # 인증서 확인
    sh("security find-identity -v -p codesigning")

    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"],
      duration: 1200,
      in_house: false
    )
    
    match(
      type: "appstore",
      app_identifier: "com.tomyongji.ios",
      keychain_name: "login.keychain",
      keychain_password: ENV["KEYCHAIN_PASSWORD"],
      readonly: false,
      force: true
    )
  end

  desc "TestFlight에 새 버전 배포"
  lane :beta do
    # 앱 버전 자동 증가
    current_version = get_version_number(
      xcodeproj: "ToMyongJi.xcodeproj",
      target: "ToMyongJi-iOS"
    )
    version_components = current_version.split(".").map(&:to_i)
    version_components[-1] += 1
    new_version = version_components.join(".")
    increment_version_number(
      version_number: new_version,
      xcodeproj: "ToMyongJi.xcodeproj"
    )

    sync_certificates
    increment_build_number
    build_ios_app(
      scheme: "ToMyongJi-iOS",
      export_method: "app-store",
      export_team_id: "FN67GXC5GH",
      export_options: {
        provisioningProfiles: {
          "com.tomyongji.ios" => "match AppStore com.tomyongji.ios"
        },
        signingStyle: "manual",
        teamID: "FN67GXC5GH"
      },
      xcargs: "-skipPackageUpdates -skipPackagePluginValidation -skipMacroValidation -skip-testing EXCLUDED_SOURCE_FILE_NAMES='*Tests.*'"
    )
    upload_to_testflight(
      skip_waiting_for_build_processing: true
    )
  end

  desc "App Store에 새 버전 배포"
  lane :release do
    sync_certificates
    increment_build_number
    build_ios_app(
      scheme: "ToMyongJi-iOS",
      export_method: "app-store",
      export_team_id: "FN67GXC5GH",
      export_options: {
        provisioningProfiles: {
          "com.tomyongji.ios" => "match AppStore com.tomyongji.ios"
        }
      },
      xcargs: "-skipPackageUpdates -skipPackagePluginValidation -skipMacroValidation -skip-testing EXCLUDED_SOURCE_FILE_NAMES='*Tests.*'"
    )
    upload_to_app_store(
      skip_screenshots: true,
      skip_metadata: true
    )
  end
end
